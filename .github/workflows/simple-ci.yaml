name: simple example for continuous integration

on:
  push:
    branches: [main]
#env:
#  AWS_REGION: ap-northeast-2
#  S3_BUCKET_NAME: ez2learn-s3-bucket
#  CODE_DEPLOY_APPLICATION_NAME: ez2learn-calc-app
#  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: ez2learn-calc-dg
# this is a test
jobs:
  unit-api-test:
    runs-on: ubuntu-latest
    steps:
      - name: echo a string
        run: echo "Hello GitHub Action!!"
      - name: Java Check
        run: java --version
      - name: check out code in build (virtual) machine
        uses: actions/checkout@v3
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Java Check
        run: java --version
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Unit Test
        run: ./gradlew unitTest
      - name: Api Test
        run: ./gradlew apiTest -Dcalculator.url=http://localhost
  e2e-test:
    runs-on: ubuntu-latest
    needs: unit-api-test
    steps:
      - name: check out code in build (virtual) machine
        uses: actions/checkout@v3
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Java Check
        run: java --version
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: build jar
        run: ./gradlew build
      - name: setup chrome web driver
        uses: nanasess/setup-chromedriver@v1
      - name: clean staging env
        run: |
          chmod +x ./stop.sh
          ./stop.sh
      - name: start application
        run: |
          chmod +x ./start.sh
          ./start.sh
      - name: e2e test
        run: ./gradlew e2eTest -Dcalculator.url=http://localhost:8080
          #deploy:
          # runs-on: ubuntu-latest

          # steps:
          #  - name: check out code in build (virtual) machine
          #    uses: actions/checkout@v3
          #  - name: Set up Java 11
          #   uses: actions/setup-java@v3
          #  with:
          #   distribution: 'zulu'
          #  java-version: '11'
          # - name: Grant execute permission for gradlew
          #   run: chmod +x gradlew
          #- name: Build with Gradle
          #  run: ./gradlew -x clean build
          #- name: Make zip file
          #  run: zip -r ./ez2learn-calc.zip .
          #- name: check files
          # run: ls -l
          #- name: Configure AWS credentials
          #  uses: aws-actions/configure-aws-credentials@v1
          # with:
          # 깃허브 Secret에 넣어둔 Access key
          #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # 깃허브 Secret에 넣어둔 Secret key
          #   aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # 깃허브 Secret에 넣어둔 Region
          #   aws-region: ${{ env.AWS_REGION }}
          # 만들어 놓은 S3에 해당 zip 파일 저장
          #- name: Upload to S3 plz
          # run: aws s3 cp --region ${{ env.AWS_REGION }} ./ez2learn-calc.zip s3://env.S3_BUCKET_NAME/ez2learn-calc.zip.zip
          #- name: Upload to AWS S3
          #  run: |
          #   aws deploy push \
          #     --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          #     --ignore-hidden-files \
          #   --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          #   --source .
          #- name: Deploy to AWS EC2 from S3
          # run: |
          # aws deploy create-deployment \
          # --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          # --deployment-config-name CodeDeployDefault.AllAtOnce \
          #--deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
        #--s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip


